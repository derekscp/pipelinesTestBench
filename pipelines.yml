resources:
  - name: pipelinesBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: artiIntegration
      buildName: pipelinesTestBench
      buildNumber: ${run_number}
  - name: PropBagTest
    type: PropertyBag
    configuration:
      name: 'notset'
      id: 'boj-notset'
  - name: myFirstRepo2
    type: GitRepo
    configuration:
      # SCM integration where the repository is located
      gitProvider: derekTestIntegration
      # Repository path, including org name/repo name
      path: derekscp/jfrog-pipelines-simple-example
      branches:
        # Specifies which branches will trigger dependent steps
        include: master
  - name: go_repo
    type: GitRepo
    configuration:
      path: derekscp/jfrog-pipelines-steps-examples/GoBuild
      branches:
        include: main
      gitProvider: derekTestIntegration
      
pipelines:
   - name: test_pipe2    
     steps:
      - name: firstStep
        type: Bash
        configuration:
          inputResources:
            - name: myFirstRepo2
          outputResources:
            - name:  PropBagTest
        execution:
          onExecute:
            - echo $current_runid
            # Writes current run number to pipeline state
            - add_pipeline_variables prev_runid=$run_id
            ##- export buildName=24
            ##- export buildNumber=pipelinesTestBench
            - export JFROG_CLI_BUILD_NUMBER=${run_number}
            - echo $JFROG_CLI_BUILD_NUMBER
            - export JFROG_CLI_BUILD_NAME=pipelinesTestBench
            - touch samplefile.txt
            - jfrog -v
            #- jfrog rt u samplefile.txt derek-generic-local --build-name=$JFROG_CLI_BUILD_NAME --build-number=$JFROG_CLI_BUILD_NUMBER
            # Uses an utility function to update the output resource with the commitSha that triggered this run
            # Dependent pipelines can be configured to trigger when this resource is updated
            # Utility functions documentation: https://www.jfrog.com/confluence/display/JFROG/Pipelines+Utility+Functions
            - write_output  PropBagTest name="someName" id="newId"       
      - name: build_go
        type: GoBuild
        configuration:
          sourceLocation: .
          resolverRepo: derek-go-virtual
          noRegistry: true
          inputSteps:
            - name: firstStep
          inputResources:
            - name: go_repo
          integrations:
            - name: artiIntegration
      - name: publish_go_binary
        type: GoPublishBinary
        configuration:
          inputSteps:
            - name: build_go
          targetRepository: derek-go-local
          integrations:
            - name: artiIntegration           
      - name: checkChange
        type: Bash
        configuration:
          inputResources:
           - name: PropBagTest
        execution:
          onExecute:
           - printenv res_PropBagTest_name
      - name: publish_build
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: publish_go_binary
          outputResources:
            - name: pipelinesBuildInfo
        execution:
          onStart:
            #- env
            - export buildName=pipelinesTestBench
            - export buildNumber=${run_number}
            - echo "Preparing for work..."
          onComplete:
            - env
